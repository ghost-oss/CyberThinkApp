// This file has been autogenerated from a class added in the UI designer.

using System;
using CyberThink.Helpers;
using Foundation;
using UIKit;

namespace CyberThink
{
	public partial class SpecificModule_ViewController : UIViewController
	{
		public SpecificModule_ViewController (IntPtr handle) : base (handle)
		{
		}

        string temporaryTitle;
        string temporaryInformation;

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            this.View.BackgroundColor = UIColor.FromRGB(204,229,255);
            backgroundView.BackgroundColor = UIColor.FromRGB(204, 229, 255);
        }

        public override void ViewWillAppear(bool animated)
        {
            moduleTitle.Text = temporaryTitle;
            moduleTitle.TextAlignment = UITextAlignment.Center;
            moduleTitle.Font = UIFont.BoldSystemFontOfSize(22);
            var attrString = new NSMutableAttributedString(moduleTitle.Text);
            attrString.AddAttribute(UIStringAttributeKey.UnderlineStyle, NSNumber.FromInt32((int)NSUnderlineStyle.Single), new NSRange(0, attrString.Length));

            moduleTitle.AttributedText = attrString;

            //Lines + SizeToFit() allow us to align text left-top and resize acording to text length
            moduleInformation.Lines = 0;
            moduleInformation.SizeToFit();
            moduleInformation.LineBreakMode = UILineBreakMode.WordWrap;
            moduleInformation.Text = temporaryInformation;
            moduleInformation.Font = UIFont.SystemFontOfSize(20, UIFontWeight.Regular);
        }

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);
            this.AdjustScrollViewHeight();
        }

        public override void DidRotate(UIInterfaceOrientation fromInterfaceOrientation)
        {
            base.DidRotate(fromInterfaceOrientation);
            AdjustScrollViewHeight();
        }

        public void BindData(string title, string information)
        {
            temporaryTitle = title;
            temporaryInformation = information;
        }

        public void AdjustScrollViewHeight()
        {
            var moduleInformationHeight = moduleInformation.Frame.Height;
            viewForScrollHeightConstraint.Constant = moduleInformationHeight + 100;
        }
    }
}
